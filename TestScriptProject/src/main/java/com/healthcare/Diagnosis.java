/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.healthcare;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rahul
 */
public class Diagnosis extends javax.swing.JFrame {

    /**
     * Creates new form Diagnosis
     */
    Database db;
    String username;
    private HashMap<String, Integer> diseaseMap;
    public Diagnosis(String username)  {
        this.username = username;
        db = Database.getInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diseaseTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("The Following are the diseases detected!");

        String[] header =  {"Disease Name", "Detected on"};
        DefaultTableModel model = new NonEditableModel(header, 0);
        ArrayList<ArrayList<Object>> data = db.getDiseases(username);
        for(ArrayList<Object> d: data)
        {
            model.addRow(d.toArray());
        }
        diseaseTable.setModel(model);
        diseaseTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                diseaseTablePropertyChange(evt);
            }
        });
        diseaseTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                diseaseTableKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                diseaseTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(diseaseTable);

        jButton1.setText("Add Disease");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        HashMap<String, Integer> tempMap = db.getDiseases();
        this.diseaseMap = tempMap;
        String[] populateDiseaseNames = new String[tempMap.size()];
        int i = 0;
        for(String item:tempMap.keySet()){
            populateDiseaseNames[i] = item;
            i++;
        }
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(populateDiseaseNames));

        jLabel2.setText("Add Diagnosis");

        jLabel3.setText("Please select a row to delete a specific disease and press D or Press Delete");

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(27, 27, 27)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jLabel2)
                    .addComponent(jButton3))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String disease = (String)this.jComboBox1.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel)this.diseaseTable.getModel();
        ArrayList<String> out = db.addDisease(username, diseaseMap.get(disease).toString());
        JOptionPane.showMessageDialog(null, out.get(1));
        ArrayList<ArrayList<Object>> data = db.getDiseases(username);
        model.setRowCount(0);
        for(ArrayList<Object> d: data)
        {
            model.addRow(d.toArray());
        }
        
        
        model.fireTableDataChanged();
        this.diseaseTable.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void diseaseTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_diseaseTablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_diseaseTablePropertyChange

    private void diseaseTableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diseaseTableKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_diseaseTableKeyTyped

    private void diseaseTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diseaseTableKeyPressed
        // TODO add your handling code here:
            if(evt.getKeyChar() == 'D')
            {
                // Send DB the signal ro remove the dessease!
                Database.getInstance().removeDiseaseForName();
                JOptionPane.showMessageDialog(null, "Not Getting removed from DB yet!");
                int [] toDelete = this.diseaseTable.getSelectedRows();
                Arrays.sort(toDelete); // be shure to have them in ascending order.
                NonEditableModel myTableModel = (NonEditableModel)diseaseTable.getModel();
                for(int ii = toDelete.length -1; ii >=0; ii--) {
                    myTableModel.removeRow(toDelete[ii]); // beginning at the largest.
            }
            
        }
    }//GEN-LAST:event_diseaseTableKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Send DB the signal ro remove the dessease!
        //db.removeDiseaseForName();
        JOptionPane.showMessageDialog(null, "Not Getting removed from DB yet!");
        int [] toDelete = this.diseaseTable.getSelectedRows();
        Arrays.sort(toDelete); // be shure to have them in ascending order.
        NonEditableModel myTableModel = (NonEditableModel)diseaseTable.getModel();
        for(int ii = toDelete.length -1; ii >=0; ii--) {
            db.deleteDisease(username, diseaseMap.get((String)(myTableModel.getValueAt(ii, 0))));
            myTableModel.removeRow(toDelete[ii]);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Diagnosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Diagnosis("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable diseaseTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

